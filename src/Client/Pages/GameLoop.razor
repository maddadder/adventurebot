@page "/gameloop/{InstanceId}/{Subscriber}/{GameState}"
@using AdventureBotUI.Client.Services
@using Read
@inject AdventureBotReadService adventureBotReadService
@inject NavigationManager NavigationManager

<PageTitle>Adventure Bot</PageTitle>

<h1>Adventure Bot</h1>
@if (response == null)
{
    <div class="container">
        <div class="row">
            <div class="col-xs-12 col-md-12">
                <button class="btn btn-primary" disabled="@HasSubmitted" @onclick="SaveState">Save State</button>
            </div>
        </div>
    </div>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-xs-12 col-md-12">@response</div>
        </div>
    </div>
}
@code 
{

    [Parameter]
    public string InstanceId { get; set; }
    [Parameter]
    public string Subscriber { get; set; }
    [Parameter]
    public string GameState { get; set; }
    protected string response = null;
    private bool HasSubmitted = false;
    protected override async Task OnParametersSetAsync()
    {
        
    }
    private async Task SaveState()
    {
        HasSubmitted = true;
        GameLoopInput input = new GameLoopInput();
        input.Subscriber = Subscriber;
        input.GameState = GameState;
        response = await adventureBotReadService.GameLoopPutAsync(InstanceId, input);
    }
}
