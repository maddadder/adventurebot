@page "/gameentry/{Name?}"
@using AdventureBotUI.Client.Services
@using ReadWrite;
@inject AdventureBotReadWriteService adventureBotReadWriteService

<PageTitle>Adventure Bot</PageTitle>

<h1>Adventure Bot</h1>
<AuthorizeView>
    <Authorized Context="Auth">
@if (gameEntries == null)
{
    <div class="container">
        <div class="row">
            <div class="col-xs-12 col-md-12">loading...</div>
        </div>
    </div>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-xs-2 col-md-2">
                <a href='gameentry/add' class="btn btn-primary" role="button">
                    <i class="fas fa-user-plus"></i>
                    Add Content Entry
                </a>
            </div>
            <div class="col-xs-12 col-md-4">
                &#160;
            </div>
            <div class="col-xs-12 col-md-12">
                <table class="table">
                    <thead>
                        <tr>
                            <th>@PageName</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var gameEntry in gameEntries.OrderBy(x => x.Created))
                        {
                        <tr>
                            <td>
                                <a href='gameentry/edit/@gameEntry.Id' class="btn btn-outline-dark" role="button">
                                    Edit
                                </a> | 
                                <a href='gameentry/delete/@gameEntry.Id' class="btn btn-outline-danger" role="button">
                                    Delete
                                </a><br/>
                                <br/>
                                <span><b>Page Name:</b> '@gameEntry.Name'</span><br/> 
                                <span><b>Created:</b> @gameEntry.Created?.ToString("MM/dd/yy")</span><br/>
                                <span><b>Modified:</b> @gameEntry.Modified?.ToString("MM/dd/yy")</span><br/>
                                <b>Paragraph(s):</b>
                                <ul style="margin:0px;padding:0px;">
                                @foreach (var desc in gameEntry.Description)
                                {
                                    <li>@desc</li>
                                }
                                </ul>
                                <br/>
                                <b>Option(s):</b>
                                <ul>
                                @if(gameEntry.Options != null)
                                {
                                    @foreach (var gameOption in gameEntry.Options)
                                    {
                                        <li><b>link-name:</b> '@gameOption.Next'<b>, link-title:</b> '<a style="text-decoration:underline" href="gameentry/@gameOption.Next" role="button">@gameOption.Description</a>'</li>
                                    }
                                    if(!gameEntry.Options.Any()){
                                        <li>No more content. Click <a style="text-decoration:underline" href="gameentry/begin">here</a> to start over.</li>
                                    }
                                }
                                </ul>
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
</Authorized>
    <NotAuthorized>
        You are not authorized to view this page
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public string Name { get; set; }
    private string PageName {get; set; }
    protected List<GameEntry> gameEntries = null;

    protected override async Task OnParametersSetAsync()
    {
        Name = Name ?? "begin";
        gameEntries = (await adventureBotReadWriteService.GameEntrySearchAsync(Name)).ToList();
        if(gameEntries.Any()){
            PageName = Name;
        }
        else{
            PageName = "404 - File Not Found";
        }
    }
}
